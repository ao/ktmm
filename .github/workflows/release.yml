name: Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test

  build:
    name: Build ${{ matrix.target }}
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: ktmm
            asset_name: ktmm-linux-amd64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: ktmm.exe
            asset_name: ktmm-windows-amd64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: ktmm
            asset_name: ktmm-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: ktmm
            asset_name: ktmm-macos-arm64

    steps:
    - uses: actions/checkout@v3
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        target: ${{ matrix.target }}
    
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --target ${{ matrix.target }}
    
    - name: Prepare artifact
      shell: bash
      run: |
        mkdir -p artifacts
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} artifacts/${{ matrix.asset_name }}
        else
          cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} artifacts/${{ matrix.asset_name }}
        fi
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.asset_name }}
        path: artifacts/${{ matrix.asset_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v3
    
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        name: KTMM v${{ env.VERSION }}
        draft: false
        prerelease: false
        files: |
          artifacts/ktmm-linux-amd64/ktmm-linux-amd64
          artifacts/ktmm-windows-amd64.exe/ktmm-windows-amd64.exe
          artifacts/ktmm-macos-x86_64/ktmm-macos-x86_64
          artifacts/ktmm-macos-arm64/ktmm-macos-arm64